kibot:
  version: 1

preflight:
  update_xml: true

outputs:
  - name: "https://github.com/openscopeproject/InteractiveHtmlBom"
    comment: "ibom.html"
    type: "ibom"
    dir: "docs/bom"
    options:
      # [string=''] List of comma separated blacklisted components or prefixes with *. E.g. 'X1,MH*'.
      # IBoM option, avoid using in conjunction with KiBot variants/filters
      blacklist: ""
      # [boolean=false] Blacklist components with empty value.
      # IBoM option, avoid using in conjunction with KiBot variants/filters
      blacklist_empty_val: false
      # [number=0] Board rotation in degrees (-180 to 180). Will be rounded to multiple of 5
      board_rotation: 0
      # [string='left-right'] [bom-only,left-right,top-bottom] Default BOM view
      bom_view: "left-right"
      # [string='Sourced,Placed'] Comma separated list of checkbox columns
      checkboxes: "Sourced,Placed"
      # [boolean=false] Default to dark mode
      dark_mode: false
      # [string|list(string)=''] Name of the filter to mark components as not fitted.
      # A short-cut to use for simple cases where a variant is an overkill.
      # Avoid using it in conjunction with with IBoM native filtering options
      dnf_filter: ""
      # [string=''] Name of the extra field that indicates do not populate status.
      # Components with this field not empty will be blacklisted.
      # IBoM option, avoid using in conjunction with KiBot variants/filters
      dnp_field: ""
      # [string=''] Comma separated list of extra fields to pull from netlist or xml file
      extra_fields: "MPN"
      # [boolean=false] Hide footprint pads by default
      hide_pads: false
      # [boolean=false] Hide silkscreen by default
      hide_silkscreen: false
      # [boolean=false] Highlight pin1 by default
      highlight_pin1: true
      # [boolean=false] Include netlist information in output.
      include_nets: true
      # [boolean=false] Include track/zone information in output. F.Cu and B.Cu layers only
      include_tracks: true
      # [string='FB'] [F,FB,B] Default layer view
      layer_view: "FB"
      # [string='ibom'] Output file name format supports substitutions:
      # %f : original pcb file name without extension.
      # %p : pcb/project title from pcb metadata.
      # %c : company from pcb metadata.
      # %r : revision from pcb metadata.
      # %d : pcb date from metadata if available, file modification date otherwise.
      # %D : bom generation date.
      # %T : bom generation time.
      # Extension .html will be added automatically.
      # Note that this name is used only when output is ''
      name_format: "ibom"
      # [string=''] Path to netlist or xml file
      netlist_file: ""
      # [boolean=false] Do not blacklist virtual components.
      # IBoM option, avoid using in conjunction with KiBot variants/filters
      no_blacklist_virtual: false
      # [boolean=false] Do not redraw pcb on drag by default
      no_redraw_on_drag: false
      # [boolean=false] Normalize extra field name case. E.g. 'MPN' and 'mpn' will be considered the same field
      normalize_field_case: true
      # [string='%f-%i%v.%x'] Filename for the output, use '' to use the IBoM filename (%i=ibom, %x=html). Affected by global options
      output: "%f-%i%v.%x"
      # [boolean=false] Show fabrication layer by default
      show_fabrication: false
      # [string='C,R,L,D,U,Y,X,F,SW,A,~,HS,CNN,J,P,NT,MH'] Default sort order for components. Must contain '~' once
      sort_order: "C,R,L,D,U,Y,X,F,SW,A,~,HS,CNN,J,P,NT,MH"
      # [string=''] Board variant to apply.
      # Avoid using it in conjunction with with IBoM native filtering options
      variant: ""
      # [string=''] Name of the extra field that stores board variant for component.
      # IBoM option, avoid using in conjunction with KiBot variants/filters
      variant_field: ""
      # [string=''] List of board variants to exclude from the BOM.
      # IBoM option, avoid using in conjunction with KiBot variants/filters
      variants_blacklist: ""
      # [string=''] List of board variants to include in the BOM.
      # IBoM option, avoid using in conjunction with KiBot variants/filters
      variants_whitelist: ""

  # KiBoM (KiCad Bill of Materials):
  # For more information: https://github.com/INTI-CMNB/KiBoM
  # This output is what you get from the 'Tools/Generate Bill of Materials' menu in eeschema.
  - name: "https://github.com/SchrodingersGat/KiBoM"
    comment: "bom.html"
    type: "kibom"
    dir: "docs/bom"
    options:
      # [string|dict] BoM configuration file, relative to PCB.
      # You can also define the configuration here, will be stored in `config.kibom.ini`
      conf:
        # [list(dict)|list(string)] List of columns to display.
        # Can be just the name of the field
        # columns:
        # [string=''] Name of the field to use for this column
        # field: ''
        # [list(string)|string=''] List of fields to join to this column
        # join: ''
        # [string=''] Name to display in the header. The field is used when empty
        # name: ''
        # [list(list(string))] A series of values which are considered to be equivalent for the part name.
        # Each entry is a list of equivalen names. Example: ['c', 'c_small', 'cap' ]
        # will ensure the equivalent capacitor symbols can be grouped together.
        # If empty the following aliases are used:
        # - ['r', 'r_small', 'res', 'resistor']
        # - ['l', 'l_small', 'inductor']
        # - ['c', 'c_small', 'cap', 'capacitor']
        # - ['sw', 'switch']
        # - ['zener', 'zenersmall']
        # - ['d', 'diode', 'd_small']
        component_aliases:
          [
            ["r", "r_small", "res", "resistor"],
            ["l", "l_small", "inductor"],
            ["c", "c_small", "cap", "capacitor"],
            ["sw", "switch"],
            ["zener", "zenersmall"],
            ["d", "diode", "d_small"],
          ]
        # [string=''] Column with links to the datasheet (HTML only)
        datasheet_as_link: "Datasheet"
        # [string|list(string)=''] Column/s containing Digi-Key part numbers, will be linked to web page (HTML only)
        digikey_link: ""
        # [list(dict)] A series of regular expressions used to exclude parts.
        # If a component matches ANY of these, it will be excluded.
        # Column names are case-insensitive.
        # If empty the following list is used:
        exclude_any:
          - column: References
            regex: "^TP[0-9]*"
          - column: References
            regex: "^FID"
          - column: Part
            regex: "mount.*hole"
          - column: Part
            regex: "solder.*bridge"
          - column: Part
            regex: "test.*point"
          - column: Footprint
            regex: "test.*point"
          - column: Footprint
            regex: "mount.*hole"
          - column: Footprint
            regex: "fiducial"
          - column: References
            regex: "LOGO"
        # [string='Config'] Field name used to determine if a particular part is to be fitted (also DNC and variants)
        fit_field: "Variant"
        # [boolean=true] Connectors with the same footprints will be grouped together, independent of the name of the connector
        group_connectors: true
        # [list(string)] List of fields used for sorting individual components into groups.
        # Components which match (comparing *all* fields) will be grouped together.
        # Field names are case-insensitive.
        # If empty: ['Part', 'Part Lib', 'Value', 'Footprint', 'Footprint Lib'] is used
        group_fields:
          ["Part", "Part Lib", "Value", "Footprint", "Footprint Lib"]
        # [boolean=false] Hide column headers
        hide_headers: false
        # [boolean=false] Hide project information
        hide_pcb_info: false
        # [boolean=true] Generate a separated section for DNF (Do Not Fit) components (HTML only)
        html_generate_dnf: true
        # [boolean=true] Exclude DNF (Do Not Fit) components
        ignore_dnf: true
        # [list(dict)] A series of regular expressions used to select included parts.
        # If there are any regex defined here, only components that match against ANY of them will be included.
        # Column names are case-insensitive.
        # If empty all the components are included
        # include_only:
        # [string=''] Name of the column to apply the regular expression
        # column: ''
        # `field` is an alias for `column`
        # [string=''] Regular expression to match
        # regex: ''
        # `regexp` is an alias for `regex`
        # [boolean=true] Component groups with blank fields will be merged into the most compatible group, where possible
        merge_blank_fields: true
        # [boolean=true] First column is the row number
        number_rows: true
        # [boolean=true] Each component group will be tested against a number of regular-expressions (see ``).
        test_regex: true
        # [boolean=false] Print grouped references in the alternate compressed style eg: R1-R7,R18
        use_alt: false
      # [string='HTML'] [HTML,CSV,XML,XLSX] format for the BoM
      format: "HTML"
      # [number=1] Number of boards to build (components multiplier)
      number: 1
      # [string='%f-%i%v.%x'] filename for the output (%i=bom). Affected by global options
      output: "%f-%i%v.%x"
      # [string=','] CSV Separator
      separator: ","
      # [string=''] Board variant(s), used to determine which components
      # are output to the BoM. To specify multiple variants,
      # with a BOM file exported for each variant, separate
      # variants with the ';' (semicolon) character.
      # This isn't related to the KiBot concept of variants
      variant: ""

  - name: "https://github.com/SchrodingersGat/KiBoM"
    comment: "bom.xlsx"
    type: "kibom"
    dir: "docs/bom"
    options:
      # [string|dict] BoM configuration file, relative to PCB.
      # You can also define the configuration here, will be stored in `config.kibom.ini`
      conf:
        # [list(dict)|list(string)] List of columns to display.
        # Can be just the name of the field
        # columns:
        # [string=''] Name of the field to use for this column
        # field: ''
        # [list(string)|string=''] List of fields to join to this column
        # join: ''
        # [string=''] Name to display in the header. The field is used when empty
        # name: ''
        # [list(list(string))] A series of values which are considered to be equivalent for the part name.
        # Each entry is a list of equivalen names. Example: ['c', 'c_small', 'cap' ]
        # will ensure the equivalent capacitor symbols can be grouped together.
        # If empty the following aliases are used:
        # - ['r', 'r_small', 'res', 'resistor']
        # - ['l', 'l_small', 'inductor']
        # - ['c', 'c_small', 'cap', 'capacitor']
        # - ['sw', 'switch']
        # - ['zener', 'zenersmall']
        # - ['d', 'diode', 'd_small']
        component_aliases:
          [
            ["r", "r_small", "res", "resistor"],
            ["l", "l_small", "inductor"],
            ["c", "c_small", "cap", "capacitor"],
            ["sw", "switch"],
            ["zener", "zenersmall"],
            ["d", "diode", "d_small"],
          ]
        # [string=''] Column with links to the datasheet (HTML only)
        datasheet_as_link: "Datasheet"
        # [string|list(string)=''] Column/s containing Digi-Key part numbers, will be linked to web page (HTML only)
        digikey_link: ""
        # [list(dict)] A series of regular expressions used to exclude parts.
        # If a component matches ANY of these, it will be excluded.
        # Column names are case-insensitive.
        # If empty the following list is used:
        exclude_any:
          - column: References
            regex: "^TP[0-9]*"
          - column: References
            regex: "^FID"
          - column: Part
            regex: "mount.*hole"
          - column: Part
            regex: "solder.*bridge"
          - column: Part
            regex: "test.*point"
          - column: Footprint
            regex: "test.*point"
          - column: Footprint
            regex: "mount.*hole"
          - column: Footprint
            regex: "fiducial"
          - column: References
            regex: "LOGO"
        # [string='Config'] Field name used to determine if a particular part is to be fitted (also DNC and variants)
        fit_field: "Variant"
        # [boolean=true] Connectors with the same footprints will be grouped together, independent of the name of the connector
        group_connectors: true
        # [list(string)] List of fields used for sorting individual components into groups.
        # Components which match (comparing *all* fields) will be grouped together.
        # Field names are case-insensitive.
        # If empty: ['Part', 'Part Lib', 'Value', 'Footprint', 'Footprint Lib'] is used
        group_fields:
          ["Part", "Part Lib", "Value", "Footprint", "Footprint Lib"]
        # [boolean=false] Hide column headers
        hide_headers: false
        # [boolean=false] Hide project information
        hide_pcb_info: false
        # [boolean=true] Generate a separated section for DNF (Do Not Fit) components (HTML only)
        html_generate_dnf: true
        # [boolean=true] Exclude DNF (Do Not Fit) components
        ignore_dnf: true
        # [list(dict)] A series of regular expressions used to select included parts.
        # If there are any regex defined here, only components that match against ANY of them will be included.
        # Column names are case-insensitive.
        # If empty all the components are included
        # include_only:
        # [string=''] Name of the column to apply the regular expression
        # column: ''
        # `field` is an alias for `column`
        # [string=''] Regular expression to match
        # regex: ''
        # `regexp` is an alias for `regex`
        # [boolean=true] Component groups with blank fields will be merged into the most compatible group, where possible
        merge_blank_fields: true
        # [boolean=true] First column is the row number
        number_rows: true
        # [boolean=true] Each component group will be tested against a number of regular-expressions (see ``).
        test_regex: true
        # [boolean=false] Print grouped references in the alternate compressed style eg: R1-R7,R18
        use_alt: false
      # [string='HTML'] [HTML,CSV,XML,XLSX] format for the BoM
      format: "XLSX"
      # [number=1] Number of boards to build (components multiplier)
      number: 1
      # [string='%f-%i%v.%x'] filename for the output (%i=bom). Affected by global options
      output: "%f-%i%v.%x"
      # [string=','] CSV Separator
      separator: ";"
      # [string=''] Board variant(s), used to determine which components
      # are output to the BoM. To specify multiple variants,
      # with a BOM file exported for each variant, separate
      # variants with the ';' (semicolon) character.
      # This isn't related to the KiBot concept of variants
      variant: ""
